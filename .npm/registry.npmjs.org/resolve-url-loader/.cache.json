{"_id":"resolve-url-loader","_rev":"70-4bc7a08c50b7227dd6583b7cb9d4a963","name":"resolve-url-loader","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","dist-tags":{"latest":"3.1.0"},"versions":{"1.0.0":{"name":"resolve-url-loader","version":"1.0.0","description":"Webpack loader that resolves an absolute path of url() statements based on the original file","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"4539e3243c4db0aeab8eebf882abadfdb1da8dd4","_id":"resolve-url-loader@1.0.0","_shasum":"3ab47e8d753f2900691042d1e40a366df140b60e","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"3ab47e8d753f2900691042d1e40a366df140b60e","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.0.0.tgz"},"directories":{}},"1.0.1":{"name":"resolve-url-loader","version":"1.0.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"3901c4d903e9d3f9c8793540b8a070186638d909","_id":"resolve-url-loader@1.0.1","_shasum":"6d68404177ad21db29273fd42e515a3406241ee6","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"6d68404177ad21db29273fd42e515a3406241ee6","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.0.1.tgz"},"directories":{}},"1.0.2":{"name":"resolve-url-loader","version":"1.0.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"e8687d1891d7070e9724277b9977d73c62515dcf","_id":"resolve-url-loader@1.0.2","_shasum":"5a45db5b0c72d666cf5b127b2e668b6244d51a2b","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"5a45db5b0c72d666cf5b127b2e668b6244d51a2b","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.0.2.tgz"},"directories":{}},"1.0.3":{"name":"resolve-url-loader","version":"1.0.3","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"a23a66ff6c5e0ec9055544d1d8d5a23488d42721","_id":"resolve-url-loader@1.0.3","_shasum":"8995884c574361204b45a06ebfe4e6b37e161fc9","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"8995884c574361204b45a06ebfe4e6b37e161fc9","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.0.3.tgz"},"directories":{}},"1.1.0":{"name":"resolve-url-loader","version":"1.1.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"408c8a189ca8823a181d8b79ea37a37904fd7618","_id":"resolve-url-loader@1.1.0","_shasum":"3276cc6fb5f76e3e838c58560bd2a7ae2d88f824","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"3276cc6fb5f76e3e838c58560bd2a7ae2d88f824","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.1.0.tgz"},"directories":{}},"1.2.0":{"name":"resolve-url-loader","version":"1.2.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"convert-source-map":"^1.1.1","loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"3fd7cfd899d3e8ac52ede78dd42abd465b9fcee2","_id":"resolve-url-loader@1.2.0","scripts":{},"_shasum":"38b779937ea5c54a843d1024bcfbdb4c0d29c7f9","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"38b779937ea5c54a843d1024bcfbdb4c0d29c7f9","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.2.0.tgz"},"directories":{}},"1.3.0":{"name":"resolve-url-loader","version":"1.3.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"convert-source-map":"^1.1.1","loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"1b286b8b80b5de54b0b7a5ea95575a1814e7c821","_id":"resolve-url-loader@1.3.0","scripts":{},"_shasum":"5b374dae38939d6ed52630a940f86ef7291d16f3","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"5b374dae38939d6ed52630a940f86ef7291d16f3","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.3.0.tgz"},"directories":{}},"1.3.1":{"name":"resolve-url-loader","version":"1.3.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"convert-source-map":"^1.1.1","loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"e691d3ebe523d5c7473b4df21cdf6ebaadf96ade","_id":"resolve-url-loader@1.3.1","scripts":{},"_shasum":"c50e4f9d980a96b0d9c4f141a2ed9051f377b95a","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"c50e4f9d980a96b0d9c4f141a2ed9051f377b95a","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.3.1.tgz"},"directories":{}},"1.3.2":{"name":"resolve-url-loader","version":"1.3.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"convert-source-map":"^1.1.1","loader-utils":"^0.2.11","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"06e5e757d2242717f0a37016c01d420d143b23e9","_id":"resolve-url-loader@1.3.2","scripts":{},"_shasum":"4bb550a4263bf35c46dd48f62431dc2342177c32","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"4bb550a4263bf35c46dd48f62431dc2342177c32","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.3.2.tgz"},"directories":{}},"1.4.0":{"name":"resolve-url-loader","version":"1.4.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"1913c891d6fd05ec7cc6d94378d8d099ac2bd00b","_id":"resolve-url-loader@1.4.0","scripts":{},"_shasum":"d6ef46c586c0ea48789760f5c30461980a4e49cf","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"d6ef46c586c0ea48789760f5c30461980a4e49cf","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.4.0.tgz"},"directories":{}},"1.4.1":{"name":"resolve-url-loader","version":"1.4.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"2e8589c26308f7768bb69fe89ead9cbd245f764f","_id":"resolve-url-loader@1.4.1","scripts":{},"_shasum":"68a07969960dbc0c61aa15a211f30753e2e2a15b","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"68a07969960dbc0c61aa15a211f30753e2e2a15b","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.4.1.tgz"},"directories":{}},"1.4.2":{"name":"resolve-url-loader","version":"1.4.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"a8839876a61163d29883efa4d0536239c4e3a129","_id":"resolve-url-loader@1.4.2","scripts":{},"_shasum":"6a42a5c965da6d6325c377eebd3aeedb61cd147a","_from":".","_npmVersion":"2.8.3","_nodeVersion":"0.10.36","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"6a42a5c965da6d6325c377eebd3aeedb61cd147a","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.4.2.tgz"},"directories":{}},"1.4.3":{"name":"resolve-url-loader","version":"1.4.3","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"c195da9e1c36c3e70f5b39f355da3828f63cf383","_id":"resolve-url-loader@1.4.3","scripts":{},"_shasum":"c2d3877e10a0f890a6a3f5a00c32f8507ddfba15","_from":".","_npmVersion":"2.14.2","_nodeVersion":"4.0.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"c2d3877e10a0f890a6a3f5a00c32f8507ddfba15","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.4.3.tgz"},"directories":{}},"1.4.4":{"name":"resolve-url-loader","version":"1.4.4","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"5fdfd8c37c4e94797589e03371019918b6a9d2b0","_id":"resolve-url-loader@1.4.4","scripts":{},"_shasum":"10ace36d3ec2605d1fc435f4d8651030a4ced5fa","_from":".","_npmVersion":"3.8.6","_nodeVersion":"4.4.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"dist":{"shasum":"10ace36d3ec2605d1fc435f4d8651030a4ced5fa","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.4.4.tgz"},"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-1.4.4.tgz_1466569392272_0.2346764167305082"},"directories":{}},"1.5.0":{"name":"resolve-url-loader","version":"1.5.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43"},"gitHead":"b9ee541eebe58a70eca3045df4ea96cf12dd1a23","_id":"resolve-url-loader@1.5.0","scripts":{},"_shasum":"c3a68177d07a4cc338f6e8b97d5fb8f79777e97b","_from":".","_npmVersion":"3.10.3","_nodeVersion":"4.4.7","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"c3a68177d07a4cc338f6e8b97d5fb8f79777e97b","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.5.0.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-1.5.0.tgz_1467633279281_0.4812818157952279"},"directories":{}},"1.6.0":{"name":"resolve-url-loader","version":"1.6.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43","urix":"^0.1.0"},"gitHead":"89d27660bcb3240f5bef5339189d626ba11b4257","_id":"resolve-url-loader@1.6.0","scripts":{},"_shasum":"5444d804557d2daa5510224842e5b10ee7f83791","_from":".","_npmVersion":"3.10.3","_nodeVersion":"4.4.7","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"5444d804557d2daa5510224842e5b10ee7f83791","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.6.0.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-16-east.internal.npmjs.com","tmp":"tmp/resolve-url-loader-1.6.0.tgz_1467767744024_0.1863004353363067"},"directories":{}},"1.6.1":{"name":"resolve-url-loader","version":"1.6.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"camelcase":"^1.2.1","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^3.1.2","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.1.43","urix":"^0.1.0"},"gitHead":"84f148f37cb6e5adbe82913267816a935e3a96b6","_id":"resolve-url-loader@1.6.1","scripts":{},"_shasum":"4a6e03c74dd38d5dfddf0f404b475d6e90025635","_from":".","_npmVersion":"3.10.9","_nodeVersion":"4.4.7","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"4a6e03c74dd38d5dfddf0f404b475d6e90025635","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-1.6.1.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-1.6.1.tgz_1481241063389_0.830287478165701"},"directories":{}},"2.0.0":{"name":"resolve-url-loader","version":"2.0.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.0.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^0.2.11","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"0e9e57b6b753e051688829b7c47f8fdd3ba9c4da","_id":"resolve-url-loader@2.0.0","scripts":{},"_shasum":"69028a8a1e8e4ed7e632d6d6f1f19bc2c486ef69","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"69028a8a1e8e4ed7e632d6d6f1f19bc2c486ef69","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.0.0.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-2.0.0.tgz_1487227944248_0.4007962851319462"},"directories":{}},"2.0.1":{"name":"resolve-url-loader","version":"2.0.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.0.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"b6a48a749c72400e1f7d037a80c9398c57908121","_id":"resolve-url-loader@2.0.1","scripts":{},"_shasum":"49f65c409fcaf0b17ae71fe3199b46caa664982b","_from":".","_npmVersion":"3.10.9","_nodeVersion":"4.4.7","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"49f65c409fcaf0b17ae71fe3199b46caa664982b","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.0.1.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-2.0.1.tgz_1488402412615_0.21751249814406037"},"directories":{}},"2.0.2":{"name":"resolve-url-loader","version":"2.0.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"4d8df6d250ef870b70fdf125d041eaa95f597db1","_id":"resolve-url-loader@2.0.2","scripts":{},"_shasum":"c465e97ea0a4791f3961f766cea775ff2e3ceb8c","_from":".","_npmVersion":"3.10.9","_nodeVersion":"4.4.7","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"c465e97ea0a4791f3961f766cea775ff2e3ceb8c","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.0.2.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"packages-12-west.internal.npmjs.com","tmp":"tmp/resolve-url-loader-2.0.2.tgz_1488522212241_0.2058443962596357"},"directories":{}},"2.0.3":{"name":"resolve-url-loader","version":"2.0.3","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"00fe51b9e42f5b1044abaf66c5bd4a1d10ec6750","_id":"resolve-url-loader@2.0.3","scripts":{},"_shasum":"f54cd1b040e8f0ab72b2cb32c9fbb8544152d9e9","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"f54cd1b040e8f0ab72b2cb32c9fbb8544152d9e9","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.0.3.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader-2.0.3.tgz_1497603384110_0.6417078943923116"},"directories":{}},"2.1.0":{"name":"resolve-url-loader","version":"2.1.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"ad93a588e246cacd15c652f7d0bb299ed779d826","_id":"resolve-url-loader@2.1.0","scripts":{},"_shasum":"27c95cc16a4353923fdbdc2dbaf5eef22232c477","_from":".","_npmVersion":"4.0.5","_nodeVersion":"7.4.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"shasum":"27c95cc16a4353923fdbdc2dbaf5eef22232c477","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.1.0.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader-2.1.0.tgz_1498306253463_0.17361780512146652"},"directories":{}},"2.1.1":{"name":"resolve-url-loader","version":"2.1.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"ec4725d315f6940eab66803592d95d09c16445f2","_id":"resolve-url-loader@2.1.1","_npmVersion":"5.3.0","_nodeVersion":"8.6.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-ZrMHMPJ8boX5peNuuHfw/waNpWAgvEj8+f8mEE/W61tC9L4NcyEBnruK7LsKamnNTbf0gUoJdPmV1okjSUVJgA==","shasum":"5354e87381aae348371e555172c50816708e6c1c","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.1.1.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader-2.1.1.tgz_1507581757176_0.6051958235912025"},"directories":{}},"2.2.0":{"name":"resolve-url-loader","version":"2.2.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"0ed4f10b554a96d6cef24196812d548d2ff7fc62","_id":"resolve-url-loader@2.2.0","_npmVersion":"5.4.2","_nodeVersion":"8.6.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-ivEo27PgDKAm3Iwzh/ObwcDrKT2O25xWBIQX6HJVVfaxYWNNW6euPMmMFzpQUZo03+iv2TloBgffEk1ULnEPdg==","shasum":"9662feaa11debf7cf8e3feb91dae9544aa7dee88","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.2.0.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader-2.2.0.tgz_1509313318981_0.41878102673217654"},"directories":{}},"2.2.1":{"name":"resolve-url-loader","version":"2.2.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.0.0","convert-source-map":"^1.1.1","loader-utils":"^1.0.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.6","urix":"^0.1.0"},"gitHead":"b56f1887fa9d45edd31cafd01e0370ae58ad2733","_id":"resolve-url-loader@2.2.1","_npmVersion":"5.4.2","_nodeVersion":"8.6.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-ywToZt/yttp4qG/SiiGMLAgaGuSaWSujAaf3WCadXehvQLxIgKFmMOSegaoH9Laa70Ayl4kti0zCAqLR48H/Mw==","shasum":"13a1396fb773edf959550e400e688f5ed32548bf","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.2.1.tgz"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader-2.2.1.tgz_1512941005594_0.5993196796625853"},"directories":{}},"2.3.0":{"name":"resolve-url-loader","version":"2.3.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","convert-source-map":"^1.5.1","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7","urix":"^0.1.0"},"devDependencies":{"jshint":"^2.9.5"},"scripts":{"lint":"jshint index.js lib"},"gitHead":"7105d8a005231bb480cfde082b969d795e36da5e","_id":"resolve-url-loader@2.3.0","_npmVersion":"5.5.1","_nodeVersion":"9.3.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-RaEUWgF/B6aTg9VKaOv2o6dfm5f75/lGh8S+SQwoMcBm48WkA2nhLR+V7KEawkxXjU4lLB16IVeHCe7F69nyVw==","shasum":"e1b37034d48f22f8cfb9f04c026faaa070fdaf26","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.3.0.tgz","fileCount":7,"unpackedSize":27970},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_2.3.0_1520156669936_0.980878408731976"},"_hasShrinkwrap":false},"0.0.1-experiment-postcss":{"name":"resolve-url-loader","version":"0.0.1-experiment-postcss","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","convert-source-map":"^1.5.1","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","postcss":"^6.0.17","source-map":"^0.5.7","urix":"^0.1.0"},"devDependencies":{"jshint":"^2.9.5"},"scripts":{"lint":"jshint index.js lib"},"readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](http://github.com/bholloway/resolve-url-loader)\n\nWebpack loader that resolves relative paths in url() statements based on the original source file.\n\nUse in conjunction with the [sass-loader](https://www.npmjs.com/package/sass-loader) and specify your asset `url()` relative to the `.scss` file in question.\n\nThis loader will use the source-map from the SASS compiler to locate the original `.scss` source file and write a more Webpack-friendly path for your asset. The CSS loader can then locate your asset for individual processing.\n\n\n## Getting started\n\n```bash\n# via yarn\nyarn add resolve-url-loader --dev\n\n# via npm\nnpm install resolve-url-loader --save-dev\n```\n\n\n## Usage\n\nPlain CSS works fine:\n\n``` javascript\nvar css = require('!css-loader!resolve-url-loader!./file.css');\n```\n\nor using [sass-loader](https://github.com/jtangelder/sass-loader):\n\n``` javascript\nvar css = require('!css-loader!resolve-url-loader!sass-loader?sourceMap!./file.scss');\n```\n\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) to compile sass and to add the css rules to your document:\n\n``` javascript\nrequire('!style!css!resolve-url!./file.css');\n```\n\nand\n\n``` javascript\nrequire('!style-loader!css-loader!resolve-url-loader!sass-loader?sourceMap!./file.scss');\n```\n\n### Apply via webpack config\n\nIt is preferable to adjust your `webpack.config` so to avoid having to prefix every `require()` statement:\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test   : /\\.css$/,\n        loaders: ['style-loader', 'css-loader', 'resolve-url-loader']\n      }, {\n        test   : /\\.scss$/,\n        loaders: ['style-loader', 'css-loader', 'resolve-url-loader', 'sass-loader?sourceMap']\n      }\n    ]\n  }\n};\n```\n\n### IMPORTANT\n\n#### Source maps required\n\nNote that **source maps** must be enabled on any preceding loader. In the above example we use `sass?sourceMap`.\n\nIn some use cases (no preceding transpiler) there will be no incoming source map. Therefore we do not warn if the source-map is missing.\n\nHowever if there is an incoming source-map then it must imply `source` information at each CSS `url()` statement.\n\n#### Don't omit `-loader`\n\n> Your `Webpack.config.js` should **always** use the long-form of the loader name (i.e. the `-loader` suffix).\n\nThere is another package called `resolve-url` which Webpack can confuse with `resolve-url-loader`.\n\nThere are other common examples. Such as `jshint` and `jshint-loader` packages being confused.\n\nThese conflicts are **very hard to debug** and will send you crazy. Your `Webpack.config.js` should **always** use the long-form of the loader name (i.e. the `-loader` suffix)\n\n### Options\n\nOptions may be set using [query parameters](https://webpack.github.io/docs/using-loaders.html#query-parameters) or by using [programmatic parameters](https://webpack.github.io/docs/how-to-write-a-loader.html#programmable-objects-as-query-option). Programmatic means the following in your `webpack.config`.\n\n``` javascript\nmodule.exports = {\n   resolveUrlLoader: {\n      ...\n   }\n}\n```\n\nWhere `...` is a hash of any of the following options.\n\n* `sourceMap` Generate a source-map.\n\n* `attempts` Limit searching for any files not where they are expected to be. This is unlimited by default so you will want to set it `1` or some small value.\n\n* `silent` Do not display warnings on CSS syntax or source-map error.\n\n* `fail` Syntax or source-map errors will result in an error.\n\n* `keepQuery` Keep query string and hash within url. I.e. `url('./MyFont.eot?#iefix')`, `url('./MyFont.svg#oldiosfix')`.\n\n* `debug` Show verbose information on the file paths being searched.\n\n* `root` An optional directory within which search may be performed. Relative paths are permitted. Where omitted `process.cwd()` is used and should be sufficient for most use cases.\n\nThere are some additional hacks available without support. Only do this if you know what you are doing.\n\n* `absolute` Forces the url() to be resolved to an absolute path. This is considered \n[bad practice](http://webpack.github.io/docs/how-to-write-a-loader.html#should-not-embed-absolute-paths).\n\n* `includeRoot` (experimental, non-performant) Include the project `root` in file search. The `root` option need not be specified but `includeRoot` is only really useful if your `root` directory is shallower than your build working directory.\n\nNote that query parameters take precedence over programmatic parameters.\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) process is run on incoming CSS.\n\nEach `url()` statement that implies an asset triggers a file search using node `fs` operations. The asset should be relative to the original source file that was transpiled. This original source is determined by consulting the incoming source-map at the point of the `url()` statement.\n\nUsually the asset is found relative to the original source file `O(1)`.\n\nHowever in cases where there is no immediate match, we start searching both deeper and shallower from the starting directory `O(n)`. Note that `n` may be limited by the `attempts` option.\n\nThis file search \"magic\" is mainly for historic reasons, to work around broken packages whose assets are not where we would expect.\n\nShallower paths must be limited to avoid the whole file system from being considered. Progressively shallower paths within the `root` will be considered. Paths featuring a `package.json` or `bower.json` file will not be considered.\n\nIf the asset is not found then the `url()` statement will not be updated with a Webpack module-relative path. However if the `url()` statement has no source-map `source` information the loader will fail.\n\nThe loader will also fail when input source-map `sources` cannot all be resolved relative to some consistent path within `root`.\n\nUse the `debug` option to see exactly what paths are being searched.\n\n## Limitations / Known-issues\n\n### File search \"magic\"\n\nFailure to find an asset will trigger a file search of your project.\n\nThis feature was for historic reasons, to work around broken packages, whose assets are not where we would expect. Such problems are rare now and many users may not be aware of the search feature.\n\nWe now have the `attempts` option to limit this feature. However by default it is unlimited (`attempts=0`) which could make your build non-performant.\n\nYou should explicitly set `attempts=1` and increase the value only if needed. We will look to make this the default in the next major release.\n\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nThe incoming source map can vary greatly with different transpilers and their mixins. Use a [source map visualiser](http://sokra.github.io/source-map-visualization/#custom-choose) to see more.  If the source-map shows the correct original file and the mixin still doesn't work then raise an issue and point to the visualisation.\n\nUltimately you will need to work around this. Try to avoid the mixin. Worst case you can try the `includeRoot` option to force a search of your project sources.\n\n### Compatiblity\n\n#### Webpack\n\nThis loader was written for Webpack 1 and has been tweaked to also support with Webpack 2.\n\nIf you find any Webpack 2 problems please comment on any similar existing issue or raise a new one.\n\n#### Node-sass\n\n> **IMPORTANT**\n> \n> Avoid the combination of **Webpack 1** with **node-sass@^4.0.0**.\n>\n> Use **Webpack 2** if you need latest **node-sass**\n\nSince `node-sass@>=4.0.0` source-maps have sometimes featured negative column values. Since this loader relies on source-maps this can cause a fatal error.\n\nI don't have a lot of data on this. If you are stuck in Webpack 1 and find that this combination actually works ok for you please let me know.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n* check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer\n* review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar\n* be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us\n* be prepared to use a [source map visualisation](http://sokra.github.io/source-map-visualization/#custom-choose) to check the transpiler has correct source maps coming out\n* (ideally) debug some code and let me know where the problem sits\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","readmeFilename":"readme.md","gitHead":"3b7163c5cffe7044db147facbf80695c049973ae","_id":"resolve-url-loader@0.0.1-experiment-postcss","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-EbgUHc2PBssLcvfLVZq4+RMBPUHND72c838PmBC+BROGqirj/HJRxVp9n4jZC5UyX5OW21dXHTCy03iHXFOyDg==","shasum":"18d806a57230afa6e2dd73ed23d044ce84d6f928","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-0.0.1-experiment-postcss.tgz","fileCount":7,"unpackedSize":28014,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+qHlCRA9TVsSAnZWagAAyzwQAJ/QSC299V76r2RYdf5w\ny3TBKQTNIUqzlP8G1wVDk0ExJdudtd8VtetrHdCtpa/QfupJyTOGCUZK8tN/\nNXkMCgduZsH/YRYMgZ8HLhxcGFpnaRQHRFzUGXFXIuSmXnebcBXo91QatNLI\ntOegxP21Op7FIopYIscXlOeqeS3LQmDejsHAANMGgV0tniVGjsu08Wmlvtgs\n7QOCkS4sNoM4Xa8SWE0EXfycxatZZuoFXzFYEFQf46w0vk6iCjyuTYRuzkRe\nKWMaYmwJiLrB4AwsJGMkSpdWROvDnxIn9YD8oHQfVcHW0RqSozTigIfJLzsy\nY6Nbg/0L3ROa6IOKgnULt+zcFfrk8hIh6QdmkL7le8mqDWWg0K5G3qjpURcl\nG3peC6XKzDeUy3hh9PF2Y647NPYh5gvgCo7J8MOPPkuGpy1YQTgvcOIi8zpg\nwsQuBl2RB1kwoTEvP+cz5cT+SVnNSZwSXV9aAvqsAibrSLkHd+i3a418iCh8\nAssDXkf94mC3MCaL2tpP4meoPU3hwCFf1Lku61CTVe0blOIscUKZM/vmt9F5\n7M0XJVpn+kWxf+DuPUe5fBunn14I+apvrxxSi+SijI8h2atW606XaYPMqAX3\nsPHNll7QQP4bez8kkBBamQOzj8vA0wIDAybkkhb73uaOYmwtb67BmBUI69wR\n6d09\r\n=WIdd\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_0.0.1-experiment-postcss_1526374884560_0.6611610182132399"},"_hasShrinkwrap":false,"deprecated":"postcss is now default in version 3"},"3.0.0-alpha.1":{"name":"resolve-url-loader","version":"3.0.0-alpha.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","files":["index.js","lib"],"scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","compose-function":"^3.0.3","convert-source-map":"^1.5.1","es6-iterator":"^2.0.3","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","postcss":"^7.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7"},"readmeFilename":"README.md","readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](https://www.npmjs.com/package/resolve-url-loader)\n\nA **webpack loader** that rewrites relative paths in url() statements based on the original source file.\n\n## Why?\n\n> **TL;DR** Making Sass work with a feature based project structure\n\nWith webpack you can import a `.scss` file (or some other compile-to-css file) and have a loader take care of the transpilation. With **Sass** (at least) this file can include a whole tree of source files into a single output.\n\nWe can imagine a virtual `.css` file at the location the original `.scss` import. Webpack expects any **assets** found in this CSS to be relative to the original imported file.\n\nFor projects with a **feature based structure** this will be a problem, since you will want to **co-locate** your assets with your `.scss` partials.\n\n**Example** - webpack imports `index.scss` which includes feature `foo`.\n\n| files                              | content                |\n|------------------------------------|------------------------|\n|src /                               |                        |\n|&nbsp;&nbsp;index.scss              | `@import features/foo` |\n|&nbsp;&nbsp;features /              |                        |\n|&nbsp;&nbsp;&nbsp;&nbsp;_foo.scss   | `url(bar.png)`         |\n|&nbsp;&nbsp;&nbsp;&nbsp;bar.png     |                        |\n\nIntuatively we want the assets in partial `_foo.scss` relative to the partial, meaning `url(bar.png)`.\n\nHowever webpack's `css-loader` will encounter `url(bar.png)` and expect to find `src/bar.png`. This is **not** the correct location and the build will fail.\n\nThankfully `resolve-url-loader` provides the \"url rewriting\" that Sass is missing. Use it _after_ the transpiler (such as [sass-loader](https://www.npmjs.com/package/sass-loader)). It makes use of the [source-map](http://www.mattzeunert.com/2016/02/14/how-do-source-maps-work.html) to find the original source file and rewrite `url()` statements.\n\nIn our example it rewrites `url(bar.png)` to `url(features/bar.png)` as required.\n\n## Version 3\n\n**Features**\n\n* Use `postcss` parser by default. This is long overdue as the old `rework` parser doesn't cope with modern css.\n\n* Lots of automated tests running actual webpack builds. If you have an interesting use-case let me know.\n\n**Breaking Changes**\n* Multiple options changed or deprecated.\n* Removed file search \"magic\" in favour of `join` option.\n* Errors always fail and are no longer swallowed.\n* Processing absolute asset paths requires `root` option to be set.\n\n**Migrating**\n\nInitially set option `engine: 'rework'` for parity with your existing build. Once working you can remove this option **or** set `engine: 'postcss'` explicitly.\n\nRetain `keepQuery` option if you are already using it.\n\nThe `root` option now has a different meaning. Previously it limited file search. Now it is the base path for absolute or root-relative URIs, consistent with `css-loader`. If you are already using it you can probably remove it.\n\nIf you build on Windows platform **and** your content contains absolute asset paths, then `css-loader` could fail. The `root` option here may fix the URIs before they get to `css-loader`. Try to leave it unspecified, otherwise (windows only) set to empty string `root: ''`.\n\n## Getting started\n\n### Install\n\nvia npm\n\n```bash\nnpm install resolve-url-loader --save-dev\n```\n\nvia yarn\n\n```bash\nyarn add resolve-url-loader --dev\n```\n\n### Configure Webpack\n\nThe typical use case is `resolve-url-loader` between `sass-loader` and `css-loader`.\n\n**:warning: IMPORTANT**\n* **source-maps required** for loaders preceding `resolve-url-loader` (regardless of `devtool`).\n* Always use **full loader package name** (don't omit `-loader`) otherwise you can get errors that are hard to debug.\n\n\n``` javascript\nrules: [\n  {\n    test: /\\.scss$/,\n    use: [\n      ...\n      {\n        loader: 'css-loader',\n        options: {...}\n      }, {\n        loader: 'resolve-url-loader',\n        options: {...}\n      }, {\n        loader: 'sass-loader',\n        options: {\n          sourceMap: true,\n          sourceMapContents: false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n## Options\n\n| option     | type                       | default     |          |  description                                                                                                                                                                     |\n|------------|----------------------------|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|`engine`    | `'rework'`<br/>`'postcss'` | `'postcss'` |          | The css parser engine.                                                                                                                                                           |\n|`sourceMap` | boolean                    | `false`     |          | Generate a source-map.                                                                                                                                                           |\n|`keepQuery` | boolean                    | `false`     |          | Keep query-string and/or hash suffixes.<br/>e.g. `url('./MyFont.eot?#iefix')`<br/>Be aware downstream loaders may remove query-string or hash.                                   |\n|`debug`     | boolean                    | `false`     |          | Display debug information.                                                                                                                                                       |\n|`silent`    | boolean                    | `false`     |          | Do **not** display warnings.                                                                                                                                                     |\n|`root`      | string                     | _unset_     |          | Similar to the (now defunct) option in `css-loader`.<br/>This string, possibly empty, is prepended to absolute URIs.<br/>Absolute URIs are only processed if this option is set. |\n|`join`      | function                   | _inbuilt_   | advanced | Custom join function.<br/>Use custom javascript to fix asset paths on a per-case basis.<br/>Refer to the default implementation for more information.                            |\n|`absolute`  | boolean                    | `false`     | useless  | Forces URIs to be output as absolute file paths.<br/>This is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.      |\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) or [postcss](https://postcss.org/) process is run on incoming CSS.\n\nEach `url()` statement may imply an asset or may not. Generally only relative URIs are considered. However if `root` is specified then absolute or root-relative URIs are considered.\n\nFor each URI considered, the incomming source-map is consulted to determine the original file where the `url()` was specified. This becomes the `base` argument to the `join` function, whose default implementation is something like the following pseudocode.\n\n```javascript\njoin(uri, base?) =>\n  compose(path.normalize, path.join)(base || options.join, uri);\n```\n\nNot that for absolute `uri` then the `base` is absent. In the default implementation the `root` option is used instead.\n\nFull file search has been discontinued in version 3, however it is possible to specify a custom `join` function.\n\nThere is the added complexity that `base` may be an iterator. However `resolve-url-loader` exports some useful functions that makes a custom `join` easier.\n\nFollowing `join` the URI has become an absolute path. Back-slashes are then converted to forward-slashes and the path is made relative to the initial resource being considered.\n\nUse the `debug` option to see verbose information from the `join` function.\n\n## Limitations / Known-issues\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nEnsure this is indeed the problem as there are many ways to misconfigure webpack. Try inlining the mixin and check that everything works correctly. However ultimately you will need to work around this.\n\n### Compatiblity\n\nTested in `node 6.x` against `webpack1`-`webpack4` and a set of contemporaneous loaders/plugins.\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n### Absolute URIs\n\nBy \"absolute URIs\" we more correctly mean assets with root-relative URLs or absolute file paths.\n\n> Absolute paths are **not** processed by default\n\nThese are **not** processed unless a `root` is specified.\n\nHowever recall that any paths that _are_ processed will have windows back-slash converted to posix forward-slash. This can be useful since some webpack loaders can choke on windows paths. By using `root: ''` then `resolve-url-loader` effectively does nothing to absolute paths except change the back-slash.\n\nIt can also be useful to process absolute URIs if you have a custom `join` function and want to process all paths. However this is perhaps better done with some separate `postcss` plugin.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\n> Remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* Remove this loader and make sure it is not a problem with a different loader in your config (most often the case).\n* Check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer.\n* Review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar.\n* Be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us.\n* (ideally) Debug some code and let me know where the problem sits.\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**. I know it is old but it maintains backwards compatibility.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","_id":"resolve-url-loader@3.0.0-alpha.1","dist":{"shasum":"1506fbe22d7a141a6c731aee2246e6183f6e8f02","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.0.0-alpha.1.tgz","integrity":"sha512-cjhD8xvYU9ISgeiLMj61ZQZY0bc10nb9Y7TBwVcZpy6xMzZiMMD33gb1+UtJtD4iPfBsct3tiWTHMNi1w5IYjg==","fileCount":14,"unpackedSize":39297,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbeMngCRA9TVsSAnZWagAArlEP/Aufp4EtQAq4b/a2XCHA\nl9mlGmb41N6wRYssvsdE3TjXII0x0HVU99SvUgtdqeJUbPFZJ3T/8px2zXlf\nciFgDkYdi+jQUqGQAhhNsyIsIOHrIksRG4GBnMxT2z9/TIBH3ei2Y74RULK4\ngVlXFPs0hciWIdDQRvXb8vLyWm64bo5Dx3zXkR40LMWhkzudF2eqjEP4Qv6t\n1gLEBtyDWKYpi+W3lKaQrMCA8vZs8rSobHIIoKqQCd+AcRYwUMI61/oUO8Oa\nYz2jAZ2EYhGNrWwWzKfIHIujOE9xZzqk5H0DLh+7VpkbC/Jap6n3it4mVWA8\nPXH2+9NJQDvEkUvSN4E18qigUD5iuQOSogpwl8YHESFSLXbCMIJO5/Z0ceLv\npLvYVIx9fh0CmWdyMDbgEcNRqLkdwhYhx0enKdcC4Hwn1I2R/uIHkG4D0ZWq\nDWNgP0msGdqD8N3qNVsSrhoIJ7fCH3rlDUr4Ziuhq66KEyQx2qTK1UiXEVfG\nboIhwxZZabjBJSxBlz/dkadJq+7QYcQnYu5z7ybSYQ/CUO+95T2Ji92htj5i\nK8yGT3TzihJsRs7XfgyXw5wQSwYUhB+UxklQKuBiftg7z6vN3+uSCcgQIFax\nCewH+muTXljekfuwK+G/Wz819Kko+zmJyhbSCqgFRFRIgoJVFzFsnxIq4TYh\n2Q+h\r\n=zLZj\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.0.0-alpha.1_1534642656407_0.7031825723651881"},"_hasShrinkwrap":false,"deprecated":"version 3 is now released"},"3.0.0-alpha.2":{"name":"resolve-url-loader","version":"3.0.0-alpha.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","compose-function":"^3.0.3","convert-source-map":"^1.5.1","es6-iterator":"^2.0.3","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","postcss":"^7.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7"},"readmeFilename":"README.md","readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](https://www.npmjs.com/package/resolve-url-loader)\n\nA **webpack loader** that rewrites relative paths in url() statements based on the original source file.\n\n## Why?\n\n> **TL;DR** Making Sass work with a feature based project structure\n\nWith webpack you can import a `.scss` file (or some other compile-to-css file) and have a loader take care of the transpilation. With **Sass** (at least) this file can include a whole tree of source files into a single output.\n\nWe can imagine a virtual `.css` file at the location the original `.scss` import. Webpack expects any **assets** found in this CSS to be relative to the original imported file.\n\nFor projects with a **feature based structure** this will be a problem, since you will want to **co-locate** your assets with your `.scss` partials.\n\n**Example** - webpack imports `index.scss` which includes feature `foo`.\n\n| files                              | content                |\n|------------------------------------|------------------------|\n|src /                               |                        |\n|&nbsp;&nbsp;index.scss              | `@import features/foo` |\n|&nbsp;&nbsp;features /              |                        |\n|&nbsp;&nbsp;&nbsp;&nbsp;_foo.scss   | `url(bar.png)`         |\n|&nbsp;&nbsp;&nbsp;&nbsp;bar.png     |                        |\n\nIntuatively we want the assets in partial `_foo.scss` relative to the partial, meaning `url(bar.png)`.\n\nHowever webpack's `css-loader` will encounter `url(bar.png)` and expect to find `src/bar.png`. This is **not** the correct location and the build will fail.\n\nThankfully `resolve-url-loader` provides the \"url rewriting\" that Sass is missing. Use it _after_ the transpiler (such as [sass-loader](https://www.npmjs.com/package/sass-loader)). It makes use of the [source-map](http://www.mattzeunert.com/2016/02/14/how-do-source-maps-work.html) to find the original source file and rewrite `url()` statements.\n\nIn our example it rewrites `url(bar.png)` to `url(features/bar.png)` as required.\n\n## Version 3\n\n**Features**\n\n* Use `postcss` parser by default. This is long overdue as the old `rework` parser doesn't cope with modern css.\n\n* Lots of automated tests running actual webpack builds. If you have an interesting use-case let me know.\n\n**Breaking Changes**\n* Multiple options changed or deprecated.\n* Removed file search \"magic\" in favour of `join` option.\n* Errors always fail and are no longer swallowed.\n* Processing absolute asset paths requires `root` option to be set.\n\n**Migrating**\n\nInitially set option `engine: 'rework'` for parity with your existing build. Once working you can remove this option **or** set `engine: 'postcss'` explicitly.\n\nRetain `keepQuery` option if you are already using it.\n\nThe `root` option now has a different meaning. Previously it limited file search. Now it is the base path for absolute or root-relative URIs, consistent with `css-loader`. If you are already using it you can probably remove it.\n\nIf you build on Windows platform **and** your content contains absolute asset paths, then `css-loader` could fail. The `root` option here may fix the URIs before they get to `css-loader`. Try to leave it unspecified, otherwise (windows only) set to empty string `root: ''`.\n\n## Getting started\n\n### Install\n\nvia npm\n\n```bash\nnpm install resolve-url-loader --save-dev\n```\n\nvia yarn\n\n```bash\nyarn add resolve-url-loader --dev\n```\n\n### Configure Webpack\n\nThe typical use case is `resolve-url-loader` between `sass-loader` and `css-loader`.\n\n**:warning: IMPORTANT**\n* **source-maps required** for loaders preceding `resolve-url-loader` (regardless of `devtool`).\n* Always use **full loader package name** (don't omit `-loader`) otherwise you can get errors that are hard to debug.\n\n\n``` javascript\nrules: [\n  {\n    test: /\\.scss$/,\n    use: [\n      ...\n      {\n        loader: 'css-loader',\n        options: {...}\n      }, {\n        loader: 'resolve-url-loader',\n        options: {...}\n      }, {\n        loader: 'sass-loader',\n        options: {\n          sourceMap: true,\n          sourceMapContents: false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n## Options\n\n| option     | type                       | default     |          |  description                                                                                                                                                                     |\n|------------|----------------------------|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|`engine`    | `'rework'`<br/>`'postcss'` | `'postcss'` |          | The css parser engine.                                                                                                                                                           |\n|`sourceMap` | boolean                    | `false`     |          | Generate a source-map.                                                                                                                                                           |\n|`keepQuery` | boolean                    | `false`     |          | Keep query-string and/or hash suffixes.<br/>e.g. `url('./MyFont.eot?#iefix')`<br/>Be aware downstream loaders may remove query-string or hash.                                   |\n|`debug`     | boolean                    | `false`     |          | Display debug information.                                                                                                                                                       |\n|`silent`    | boolean                    | `false`     |          | Do **not** display warnings.                                                                                                                                                     |\n|`root`      | string                     | _unset_     |          | Similar to the (now defunct) option in `css-loader`.<br/>This string, possibly empty, is prepended to absolute URIs.<br/>Absolute URIs are only processed if this option is set. |\n|`join`      | function                   | _inbuilt_   | advanced | Custom join function.<br/>Use custom javascript to fix asset paths on a per-case basis.<br/>Refer to the default implementation for more information.                            |\n|`absolute`  | boolean                    | `false`     | useless  | Forces URIs to be output as absolute file paths.<br/>This is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.      |\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) or [postcss](https://postcss.org/) process is run on incoming CSS.\n\nEach `url()` statement may imply an asset or may not. Generally only relative URIs are considered. However if `root` is specified then absolute or root-relative URIs are considered.\n\nFor each URI considered, the incomming source-map is consulted to determine the original file where the `url()` was specified. This becomes the `base` argument to the `join` function, whose default implementation is something like the following pseudocode.\n\n```javascript\njoin(uri, base?) =>\n  compose(path.normalize, path.join)(base || options.join, uri);\n```\n\nNot that for absolute `uri` then the `base` is absent. In the default implementation the `root` option is used instead.\n\nFull file search has been discontinued in version 3, however it is possible to specify a custom `join` function.\n\nThere is the added complexity that `base` may be an iterator. However `resolve-url-loader` exports some useful functions that makes a custom `join` easier.\n\nFollowing `join` the URI has become an absolute path. Back-slashes are then converted to forward-slashes and the path is made relative to the initial resource being considered.\n\nUse the `debug` option to see verbose information from the `join` function.\n\n## Limitations / Known-issues\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nEnsure this is indeed the problem as there are many ways to misconfigure webpack. Try inlining the mixin and check that everything works correctly. However ultimately you will need to work around this.\n\n### Compatiblity\n\nTested in `node 6.x` against `webpack1`-`webpack4` and a set of contemporaneous loaders/plugins.\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n### Absolute URIs\n\nBy \"absolute URIs\" we more correctly mean assets with root-relative URLs or absolute file paths.\n\n> Absolute paths are **not** processed by default\n\nThese are **not** processed unless a `root` is specified.\n\nHowever recall that any paths that _are_ processed will have windows back-slash converted to posix forward-slash. This can be useful since some webpack loaders can choke on windows paths. By using `root: ''` then `resolve-url-loader` effectively does nothing to absolute paths except change the back-slash.\n\nIt can also be useful to process absolute URIs if you have a custom `join` function and want to process all paths. However this is perhaps better done with some separate `postcss` plugin.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\n> Remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* Remove this loader and make sure it is not a problem with a different loader in your config (most often the case).\n* Check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer.\n* Review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar.\n* Be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us.\n* (ideally) Debug some code and let me know where the problem sits.\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**. I know it is old but it maintains backwards compatibility.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","_id":"resolve-url-loader@3.0.0-alpha.2","dist":{"shasum":"6b98afc305a72a410a9c894fe3f75627bc87ffc9","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.0.0-alpha.2.tgz","integrity":"sha512-JGVhnUguJqG992uEYGdV76E9F2BJvbFVPvDtTZYQDL+DWm+NDrGbE7oCrWWDapf3g+bqQVDoH7rQvQzFJ/UVDA==","fileCount":14,"unpackedSize":39343,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbh0AxCRA9TVsSAnZWagAABGIP/iYOs91TZT1Ag+Ctd9uo\nKXoqJzLky00BXJei2COnm65KCzozQn5ydQEb8s2cN95ASnESEP2EnnXl40mN\n5heKS9WoPBfS/VSU77Fwd4XodhrYIRcILdW0xcZaAy11x9rUbqQ2pBHWbDXY\nroznhXPpjyuWS2eby4yh8K0ItfVaHhS+aPNzFVcEkb7S9VT6OEFj3Sz7MMSP\nsBij/keT6mm40Yyb0/m0c7/J41tHrgUD4bI45+tnUrM6pDCH4ApVMwIcVMiS\nqUuvLKQyayFXQjubRcbHpVO+N0X9ptzG6pou/JQTsxzwUrQF0SsveWR7c+DS\nuRf5Tpxo7bD+irDbAikjSlQWvOVjXRxsthpjvZTAKSYb+0dr3EPXAifpX2LR\n7cIhzShvZSJ5sJDibLq+beZbY9zzqzruOPLzNlA7zyWLzIfLfWyIC8PP5WhU\nfhm45koqLdXWyiWSMyHUIAI+/PJwEGnsmHeQfkn4YzOl9UNafp/TIN0JF3EU\nqby3rlt41B4mrBZEGALTSyQ7wv79tILCLUJjsgO7vrSxIAsKJYTx5RNmQ0h5\ngwxVfKM602Au6WtTohKMoXrNDi4V/0WzOlF1OS/EbhvZ28iSLgQs0RI102SD\nNgy5bnG5KSUh5TjIiNxh6c721aBzaQNcCK/d4yEp5uvEgqSzkAOhfzG8vhex\nB68D\r\n=eq5p\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.0.0-alpha.2_1535590449103_0.36192083953597765"},"_hasShrinkwrap":false,"deprecated":"version 3 is now released"},"3.0.0-beta.1":{"name":"resolve-url-loader","version":"3.0.0-beta.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","compose-function":"^3.0.3","convert-source-map":"^1.5.1","es6-iterator":"^2.0.3","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","postcss":"^7.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7"},"readmeFilename":"README.md","readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](https://www.npmjs.com/package/resolve-url-loader)\n\nA **webpack loader** that rewrites relative paths in url() statements based on the original source file.\n\n## Why?\n\n> **TL;DR** Making Sass work with a feature based project structure\n\nWith webpack you can import a `.scss` file (or some other compile-to-css file) and have a loader take care of the transpilation. With **Sass** (at least) this file can include a whole tree of source files into a single output.\n\nWe can imagine a virtual `.css` file at the location the original `.scss` import. Webpack expects any **assets** found in this CSS to be relative to the original imported file.\n\nFor projects with a **feature based structure** this will be a problem, since you will want to **co-locate** your assets with your `.scss` partials.\n\n**Example** - webpack imports `index.scss` which includes feature `foo`.\n\n| files                              | content                |\n|------------------------------------|------------------------|\n|src /                               |                        |\n|&nbsp;&nbsp;index.scss              | `@import features/foo` |\n|&nbsp;&nbsp;features /              |                        |\n|&nbsp;&nbsp;&nbsp;&nbsp;_foo.scss   | `url(bar.png)`         |\n|&nbsp;&nbsp;&nbsp;&nbsp;bar.png     |                        |\n\nIntuatively we want the assets in partial `_foo.scss` relative to the partial, meaning `url(bar.png)`.\n\nHowever webpack's `css-loader` will encounter `url(bar.png)` and expect to find `src/bar.png`. This is **not** the correct location and the build will fail.\n\nThankfully `resolve-url-loader` provides the \"url rewriting\" that Sass is missing. Use it _after_ the transpiler (such as [sass-loader](https://www.npmjs.com/package/sass-loader)). It makes use of the [source-map](http://www.mattzeunert.com/2016/02/14/how-do-source-maps-work.html) to find the original source file and rewrite `url()` statements.\n\nIn our example it rewrites `url(bar.png)` to `url(features/bar.png)` as required.\n\n## Version 3\n\n**Features**\n\n* Use `postcss` parser by default. This is long overdue as the old `rework` parser doesn't cope with modern css.\n\n* Lots of automated tests running actual webpack builds. If you have an interesting use-case let me know.\n\n**Breaking Changes**\n* Multiple options changed or deprecated.\n* Removed file search \"magic\" in favour of `join` option.\n* Errors always fail and are no longer swallowed.\n* Processing absolute asset paths requires `root` option to be set.\n\n**Migrating**\n\nInitially set option `engine: 'rework'` for parity with your existing build. Once working you can remove this option **or** set `engine: 'postcss'` explicitly.\n\nRetain `keepQuery` option if you are already using it.\n\nThe `root` option now has a different meaning. Previously it limited file search. Now it is the base path for absolute or root-relative URIs, consistent with `css-loader`. If you are already using it you can probably remove it.\n\nIf you build on Windows platform **and** your content contains absolute asset paths, then `css-loader` could fail. The `root` option here may fix the URIs before they get to `css-loader`. Try to leave it unspecified, otherwise (windows only) set to empty string `root: ''`.\n\n## Getting started\n\n### Install\n\nvia npm\n\n```bash\nnpm install resolve-url-loader --save-dev\n```\n\nvia yarn\n\n```bash\nyarn add resolve-url-loader --dev\n```\n\n### Configure Webpack\n\nThe typical use case is `resolve-url-loader` between `sass-loader` and `css-loader`.\n\n**:warning: IMPORTANT**\n* **source-maps required** for loaders preceding `resolve-url-loader` (regardless of `devtool`).\n* Always use **full loader package name** (don't omit `-loader`) otherwise you can get errors that are hard to debug.\n\n\n``` javascript\nrules: [\n  {\n    test: /\\.scss$/,\n    use: [\n      ...\n      {\n        loader: 'css-loader',\n        options: {...}\n      }, {\n        loader: 'resolve-url-loader',\n        options: {...}\n      }, {\n        loader: 'sass-loader',\n        options: {\n          sourceMap: true,\n          sourceMapContents: false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n## Options\n\n| option     | type                       | default     |          |  description                                                                                                                                                                     |\n|------------|----------------------------|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|`engine`    | `'rework'`<br/>`'postcss'` | `'postcss'` |          | The css parser engine.                                                                                                                                                           |\n|`sourceMap` | boolean                    | `false`     |          | Generate a source-map.                                                                                                                                                           |\n|`keepQuery` | boolean                    | `false`     |          | Keep query-string and/or hash suffixes.<br/>e.g. `url('./MyFont.eot?#iefix')`<br/>Be aware downstream loaders may remove query-string or hash.                                   |\n|`debug`     | boolean                    | `false`     |          | Display debug information.                                                                                                                                                       |\n|`silent`    | boolean                    | `false`     |          | Do **not** display warnings.                                                                                                                                                     |\n|`root`      | string                     | _unset_     |          | Similar to the (now defunct) option in `css-loader`.<br/>This string, possibly empty, is prepended to absolute URIs.<br/>Absolute URIs are only processed if this option is set. |\n|`join`      | function                   | _inbuilt_   | advanced | Custom join function.<br/>Use custom javascript to fix asset paths on a per-case basis.<br/>Refer to the default implementation for more information.                            |\n|`absolute`  | boolean                    | `false`     | useless  | Forces URIs to be output as absolute file paths.<br/>This is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.      |\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) or [postcss](https://postcss.org/) process is run on incoming CSS.\n\nEach `url()` statement may imply an asset or may not. Generally only relative URIs are considered. However if `root` is specified then absolute or root-relative URIs are considered.\n\nFor each URI considered, the incomming source-map is consulted to determine the original file where the `url()` was specified. This becomes the `base` argument to the `join` function, whose default implementation is something like the following pseudocode.\n\n```javascript\njoin(uri, base?) =>\n  compose(path.normalize, path.join)(base || options.join, uri);\n```\n\nNote that for absolute `uri` then the `base` is absent. In the default implementation the `root` option is used instead.\n\nFull file search has been discontinued in version 3, however it is possible to specify a custom `join` function.\n\nThere is the added complexity that `base` may be an iterator. However `resolve-url-loader` exports some useful functions that makes a custom `join` easier.\n\nFollowing `join` the URI has become an absolute path. Back-slashes are then converted to forward-slashes and the path is made relative to the initial resource being considered.\n\nUse the `debug` option to see verbose information from the `join` function.\n\n## Limitations / Known-issues\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nEnsure this is indeed the problem as there are many ways to misconfigure webpack. Try inlining the mixin and check that everything works correctly. However ultimately you will need to work around this.\n\n### Compatiblity\n\nTested `macOS` and `Windows` for `node 6.x`.\n\nAll `webpack1`-`webpack4` with contemporaneous loaders/plugins.\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n### Engines\n\nThe `engine:postcss` is by far the more reliable option.\n\nThe `engine:rework` option is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.\n\nIf you need production css source-map it is best to avoid the combination `webpack4` with `engine:rework`. Tests show a systematic flaw in the outgoing source-map mappings.\n\n### Absolute URIs\n\nBy \"absolute URIs\" we more correctly mean assets with root-relative URLs or absolute file paths.\n\n> Absolute paths are **not** processed by default\n\nThese are **not** processed unless a `root` is specified.\n\nHowever recall that any paths that _are_ processed will have windows back-slash converted to posix forward-slash. This can be useful since some webpack loaders can choke on windows paths. By using `root: ''` then `resolve-url-loader` effectively does nothing to absolute paths except change the back-slash.\n\nIt can also be useful to process absolute URIs if you have a custom `join` function and want to process all paths. However this is perhaps better done with some separate `postcss` plugin.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\n> Remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* Remove this loader and make sure it is not a problem with a different loader in your config (most often the case).\n* Check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer.\n* Review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar.\n* Be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us.\n* (ideally) Debug some code and let me know where the problem sits.\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**. I know it is old but it maintains backwards compatibility.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","_id":"resolve-url-loader@3.0.0-beta.1","dist":{"shasum":"132e4209e326105ba98060211703db45384ea899","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.0.0-beta.1.tgz","integrity":"sha512-I8LDgp3nD4cxIewt77cA5mmOTNmfIJLEB+IrrERXuyRhV2vwlXlvNqa6A1cDt5lBfQcOmJg4n/25Ki5I5lU+/w==","fileCount":14,"unpackedSize":39743,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbkokqCRA9TVsSAnZWagAAiC0P+wVX8LQmEGb6qRBB0d1N\ncYyaXOy22RG3ft4A8Ulz7pBz2hT4FL79VF2CH0sdJeWVN6FyF6pVAl7WIsLY\n+KJ5Jodwx9Ls5h6zJcPypBreD0ZICy9CYioAh4BAW2+xls+iblvokUVlYEHh\nLsLn6CqL2GZ9EM7FVXZbgnYmBqo46tdi8+N+atiJFEkThIZOfduao9Lu+C4j\n7Io9Awf2ozTsDg/Md3wZ4rBSVRx55+C0hCNPQWNxFMrCUO0yzxkQQ57SMVTR\n7e+DSHtSHZh+V7thTZjPuebjBmutDeGU0IA8ZGqQOOHIiFjiwZPTNJ6ZcJ4K\n82wI6/uaVbHbf3HSoQHNNtNFwr75NfTIRIxTweqE3VjT1do63CROeLkxSTZv\nc88Cy6quGpyq3UF/IPQKTk8s0AVGqSGMdp1on9+P7x2rHUiYQE4Z+41Nhbe5\noFb7KAvua7NjAZv/nkxsOKjwyJm6eKmjgEtxCV9flZGExJUtBFhRd6iOOaww\nmC+JBYUZP6SO9NRkG1P9ovsJ5q3O6Uxjykw/q/oq+7i7q1CTjHD/PHEYpQMa\nmaHm1b5oliwK9TthHjMMHbB4BEikedYLgkb7+LOuQwEKmZ+c8oLwgss3Nrbr\nydCh+bwBXz/ZLgUo6TvIgDBKRobKRyAmyTKy0e8mLsuRWlwWE31uYy6Mxsfk\nZYZE\r\n=NHCp\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.0.0-beta.1_1536330025412_0.579932614761757"},"_hasShrinkwrap":false,"deprecated":"version 3 is now released"},"2.3.1":{"name":"resolve-url-loader","version":"2.3.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","convert-source-map":"^1.5.1","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7","urix":"^0.1.0"},"devDependencies":{"jshint":"^2.9.5"},"scripts":{"lint":"jshint index.js lib"},"gitHead":"f1dfda76a153679f0898ae1682416b3f757ee2be","_id":"resolve-url-loader@2.3.1","_npmVersion":"5.4.2","_nodeVersion":"8.7.0","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-tpt4A/tOT8jxRDa91RbBV4c22AGj+WllOxT8rYSYhT2XDdL33Nca9HudwVx4mvP9PLokz+wpCu44tWUGVMYYLA==","shasum":"b462fc7a78a22baf3ee462568d8ff5d766f7f1da","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.3.1.tgz","fileCount":12064,"unpackedSize":20658796,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbk3l8CRA9TVsSAnZWagAAs6QP+gKITSoV1BcFGMroLHFm\nI+2u/3FpO01sIOsd74iq8hKK3MnFPjl472PAjofqk1x33KWzELVUGDukMWZH\nwfArUkrdrMpPjapEQAHyK2A3jkCIALBdun5t6P4uGm/G1jGhq9eFY2KtzmsX\nBoYXgRnqHYoXMVgraovv402Vd/8IOM++3HKcBMEwZojoJ88LjGJl1z7eZeSg\nA5EFTolIw5bTvkrvwBCXxUUvB2CLpz4NRfsY8SjapWZZ/lNpbCyIIEWscTIa\nKhwDD6Q5sxJSgUiZOu6KcswZoUS6x5QpGE5yi7Cddo9La4VvKjSHWOwFadIt\nXEglyb3YadllycPh1WR1JLjXSnJGWV1sp8LDu/87fntiCYyAuLkKwgGKoMrm\nTVlGku5E7qIYwDWm3DCKnO37QAAbt7n5CwVEv2CPj3IO0LIns6x2mcjz3M7t\nkW62yKT8yVSKis27gfqWFXUWdr6Sf7BbZAWtGbhOWD+M0T5gIbXxeX0RBgWG\nVuYeHe7hF4Qo5pXph/rTN1ORxEvwb0j9E/XmSjgKmfEGJYPup1b+aa1Qk2kL\nuotCGtrQY9JGczM0kW87/xaQha6OC4XM1NoT1b6kExCGwgSVD1cbSganPrXG\nD4nJjbb9pBm8WRVGbEqeIiBO3pl5epbWYMSSVOobW5hRffQ8v9At9K1QCYiL\nE83K\r\n=aRDG\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_2.3.1_1536391547664_0.42444543664848355"},"_hasShrinkwrap":false,"deprecated":"package is bloated with temp files (fixed in 2.3.2)"},"3.0.0":{"name":"resolve-url-loader","version":"3.0.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","compose-function":"^3.0.3","convert-source-map":"^1.5.1","es6-iterator":"^2.0.3","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","postcss":"^7.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7"},"_id":"resolve-url-loader@3.0.0","dist":{"shasum":"c47eeca1fc8d62b08dc2eef12b3af5af3e775c74","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.0.0.tgz","integrity":"sha512-ZzRUnpu+pLkrN2ZBsEEifOD6W+9ZNtdIu+kY3vs+11PwuZ2WykxbAY9qO+S9SmasSDRllxNdSm9IhN8HU4xGKg==","fileCount":14,"unpackedSize":39736,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbmyLDCRA9TVsSAnZWagAArTUP/1VjoGu9dWlunNztboiX\nIGtO+mH9/q0ySJ7+lMUBlS2p4hhm5D1VpjkowgqUdYjpPQVsNTI0lowVGowW\n2I2hQDJxkUBVGMtgTa+L34Jha1TwjV5fl2WgCMpCsCzWyPU2gVhkCIrhTDM8\n+OHkEg75pYMRSGStO67sRB6XD6kTAy1bAfQe9IXFOwMzoI6j+RJN/pFbIWHN\n0BdhCenQae9Dn2A67zB3+vow1XY5ckCmPNb9BDr955J+TzBvdSFpX51Nv4MZ\nYYesXpsOrBZlT562J840mpXmfKEtxgsSNoX3h9zHrB74kwyLE9DJJCEJlTab\n3pfOTZv3ON7AIgiSNg/EZaEdfAaHLJWypPOESc8BKJf5ARMraAOxv9MvOyrC\nQlLOFPWnsOsHkiZhlzS9DPyYhHxaNHSY+ItlT1iys+HwqpRsxlFB0X2r7Mj8\n/OBwtBwT4CqBjPPrZyzgL1ghYpqJay8zwFXYt5OswyCZFeBT/DVv4D/X21Jo\n8JGesSKHUJ074m8ma8RHvsX0msYIBsFDWgBIEcxn4xzoicAuby4VrsuLw8t6\nFepKkbdVmW1CFGoQWolj1cDUEDWIix9GsRb5Vb5barMVZj96YH/zG5RHVBM3\n3CVmv747vbFqdGMbLtbn1qkLXNM0yT9cTPxIhF6iVilLC7Bu0hBaGmq4uW7C\nfHF7\r\n=EHGD\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.0.0_1536893634988_0.03408414356838052"},"_hasShrinkwrap":false},"3.0.1":{"name":"resolve-url-loader","version":"3.0.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","engines":{"node":">=6.0.0"},"scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"2.0.0","camelcase":"5.0.0","compose-function":"3.0.3","convert-source-map":"1.6.0","es6-iterator":"2.0.3","loader-utils":"1.2.3","postcss":"7.0.14","rework":"1.0.1","rework-visit":"1.0.0","source-map":"0.6.1"},"_id":"resolve-url-loader@3.0.1","_npmVersion":"5.10.0","_nodeVersion":"6.14.4","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-oBFayx/K2hUKdQ47USSHsmjP8+oQlNG5Vx+OYpTba+M1LNBCcMXc5/mR16RLDCtbM68rk0Rc9cDJfHT+BipAXQ==","shasum":"91f798812bce467336404806864b288090aab58c","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.0.1.tgz","fileCount":11,"unpackedSize":39731,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZ7aBCRA9TVsSAnZWagAA0YMP/0oBKuuednXwD2HNUG5X\nhXy6IPMK17xOkrgax3KJ7d0xvRynK2Q8Afmn0z16zP66cwGArXT5UgtnMapS\nEyVV5IZnYDTJQFj9ng3IbmImDr7ptGejjuWyRUTgjTHIUBfZePeAoDvoNEhs\nQqHceXvPTC1e6KonHwemKoRVhN/1g6kqZLOUCBb5zEx4kRsODFpSIHJkbYsF\nE/wAUsvvvZCJRP6H5+VWimG3jbMIs9nndhVTle2XqgTx8JLN3yZkQwqurpNM\nqFq4ap1WCWb6QdbdmCB2asWjAg5Ue/ZbpTCE8YNVOZWmVs+TFb9wmbGq69Xn\nSN9lCqWMtl3VmIwQYyfKo03H0zDpbNfIU6xMdWXQpe55NNhFPBjmeP6OOAH7\n37o5ULZQFgCZUxT4oZqLHa0ODTlTqQbk0lgpy06FqlJ6Cr5JS9JykInnUcOY\nqa76VA7okCG8j8CL5to1+SfPQ63U9nfZ6KI6chs3CtKSo+uIACoNXPcgxGRl\nWLTHscHSjduRaEH2LU/jTp6m08j/zQg5i/N9TE2398zSVzfw1/r1zneriora\nCW6Umneae5OIrGYQ0EH9k3Y9Sz4ynMcoz1Zs0yQtg3uO7/7TEsQS+0NCIlE4\nvifiJquD7O29juAdLGVwQo+OQQ9vSTvZnVyXgwxkESDqsqKLZf1qBhqmSwyw\nG2tC\r\n=vtL5\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.0.1_1550300800813_0.5813359165893999"},"_hasShrinkwrap":false},"2.3.2":{"name":"resolve-url-loader","version":"2.3.2","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","dependencies":{"adjust-sourcemap-loader":"^1.1.0","camelcase":"^4.1.0","convert-source-map":"^1.5.1","loader-utils":"^1.1.0","lodash.defaults":"^4.0.0","rework":"^1.0.1","rework-visit":"^1.0.0","source-map":"^0.5.7","urix":"^0.1.0"},"devDependencies":{"jshint":"^2.9.5"},"scripts":{"lint":"jshint index.js lib"},"gitHead":"c300771c9b63117e7a82cadeb2f5ad1eac43915e","_id":"resolve-url-loader@2.3.2","_npmVersion":"5.10.0","_nodeVersion":"6.14.4","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-sc/UVgiADdoTc+4cGPB7cUCnlEkzlxD1NXHw4oa9qA0fp30H8mAQ2ePJBP9MQ029DUuhEPouhNdvzT37pBCV0g==","shasum":"83bb9ebc392b66c563795eef22f078970357a26e","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-2.3.2.tgz","fileCount":6,"unpackedSize":27549,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcZ8XWCRA9TVsSAnZWagAATWoP/0BDp/2yaEWNyT8HHBge\nCZKPeyWaHYrW/tIsCvQ3Rc44bbjBb3SuUPNPE3w3vsScyS7SBUVXt0XVUfYN\nmNmDW+wXU6oGCgWkUGNVFLYRQGMB8kJzFvDl4gsPYZ3RaYHfMEnPfk9hjVKf\n2WlIDD5Is4J7OeFBV3Zjbmrcba2iNKx/atEX2PMJI9DRz3Hqe0aiITPRJ9jH\n/3uMdUfvUb77aEvuqZX3Fb8XkfHxCbSBVhELZoNsJGniu5ksHeZYAVvFIeE/\n8Ze4SECud5jA8EPSV7GF0tinHgBVazQ2wYn5MIja61vL5Mabyfwxb/D8J3gi\nAJAquT8Di0j7YMuGyUxPktJMv4MMoDEN2z03fh8w1UAEvEA2Qp0TkiV4z1OV\n2xVXcqwHi1j7KaIIBNbErtGpV1CcBoYa28ZnaEF1mOx032Vdn8osfHdBGbg2\n/Pc6GyEg0bZtmot0T1Zd7rQVuV19o5WvdCfepW6jA2voKzUYQVBMimgOqgeu\nsQ/rVlcxnOtZmMlUuS3NX8fFn4cqgN1TVS16LrUAkMizXm4XAyGB5BcBPTXI\nFmf/e8hqvqEQSLUGjHoWdQ/w8/KD5igJM2CbjrBmTlI/NP7e8rh9NY3ElHxR\nbx9R7yuZj/kN2+vfXsXucY3sr4I5cMRL/4z8rnqN+y8TD2O87Xt+e8FG7HvT\nRHEi\r\n=1mc6\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_2.3.2_1550304726264_0.16630886738012896"},"_hasShrinkwrap":false},"3.1.0-beta.1":{"name":"resolve-url-loader","version":"3.1.0-beta.1","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","engines":{"node":">=6.0.0"},"scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"2.0.0","camelcase":"5.0.0","compose-function":"3.0.3","convert-source-map":"1.6.0","es6-iterator":"2.0.3","loader-utils":"1.2.3","postcss":"7.0.14","rework":"1.0.1","rework-visit":"1.0.0","source-map":"0.6.1"},"readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](https://www.npmjs.com/package/resolve-url-loader)\n\nA **webpack loader** that rewrites relative paths in url() statements based on the original source file.\n\n## Why?\n\n> **TL;DR** Making Sass work with a feature based project structure\n\nWith webpack you can import a `.scss` file (or some other compile-to-css file) and have a loader take care of the transpilation. With **Sass** (at least) this file can include a whole tree of source files into a single output.\n\nWe can imagine a virtual `.css` file at the location the original `.scss` import. Webpack expects any **assets** found in this CSS to be relative to the original imported file.\n\nFor projects with a **feature based structure** this will be a problem, since you will want to **co-locate** your assets with your `.scss` partials.\n\n**Example** - webpack imports `index.scss` which includes feature `foo`.\n\n| files                              | content                |\n|------------------------------------|------------------------|\n|src /                               |                        |\n|&nbsp;&nbsp;index.scss              | `@import features/foo` |\n|&nbsp;&nbsp;features /              |                        |\n|&nbsp;&nbsp;&nbsp;&nbsp;_foo.scss   | `url(bar.png)`         |\n|&nbsp;&nbsp;&nbsp;&nbsp;bar.png     |                        |\n\nIntuatively we want the assets in partial `_foo.scss` relative to the partial, meaning `url(bar.png)`.\n\nHowever webpack's `css-loader` will encounter `url(bar.png)` and expect to find `src/bar.png`. This is **not** the correct location and the build will fail.\n\nThankfully `resolve-url-loader` provides the \"url rewriting\" that Sass is missing. Use it _after_ the transpiler (such as [sass-loader](https://www.npmjs.com/package/sass-loader)). It makes use of the [source-map](http://www.mattzeunert.com/2016/02/14/how-do-source-maps-work.html) to find the original source file and rewrite `url()` statements.\n\nIn our example it rewrites `url(bar.png)` to `url(features/bar.png)` as required.\n\n## Version 3\n\n**Features**\n\n* Use `postcss` parser by default. This is long overdue as the old `rework` parser doesn't cope with modern css.\n\n* Lots of automated tests running actual webpack builds. If you have an interesting use-case let me know.\n\n**Breaking Changes**\n* Multiple options changed or deprecated.\n* Removed file search \"magic\" in favour of `join` option.\n* Errors always fail and are no longer swallowed.\n* Processing absolute asset paths requires `root` option to be set.\n\n**Migrating**\n\nInitially set option `engine: 'rework'` for parity with your existing build. Once working you can remove this option **or** set `engine: 'postcss'` explicitly.\n\nRetain `keepQuery` option if you are already using it.\n\nThe `root` option now has a different meaning. Previously it limited file search. Now it is the base path for absolute or root-relative URIs, consistent with `css-loader`. If you are already using it you can probably remove it.\n\nIf you build on Windows platform **and** your content contains absolute asset paths, then `css-loader` could fail. The `root` option here may fix the URIs before they get to `css-loader`. Try to leave it unspecified, otherwise (windows only) set to empty string `root: ''`.\n\n## Getting started\n\n### Install\n\nvia npm\n\n```bash\nnpm install resolve-url-loader --save-dev\n```\n\nvia yarn\n\n```bash\nyarn add resolve-url-loader --dev\n```\n\n### Configure Webpack\n\nThe typical use case is `resolve-url-loader` between `sass-loader` and `css-loader`.\n\n**:warning: IMPORTANT**\n* **source-maps required** for loaders preceding `resolve-url-loader` (regardless of `devtool`).\n* Always use **full loader package name** (don't omit `-loader`) otherwise you can get errors that are hard to debug.\n\n\n``` javascript\nrules: [\n  {\n    test: /\\.scss$/,\n    use: [\n      ...\n      {\n        loader: 'css-loader',\n        options: {...}\n      }, {\n        loader: 'resolve-url-loader',\n        options: {...}\n      }, {\n        loader: 'sass-loader',\n        options: {\n          sourceMap: true,\n          sourceMapContents: false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n## Options\n\n| option      | type                       | default     |          |  description                                                                                                                                                                     |\n|-------------|----------------------------|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `engine`    | `'rework'`<br/>`'postcss'` | `'postcss'` |          | The css parser engine.                                                                                                                                                           |\n| `sourceMap` | boolean                    | `false`     |          | Generate a source-map.                                                                                                                                                           |\n| `keepQuery` | boolean                    | `false`     |          | Keep query-string and/or hash suffixes.<br/>e.g. `url('./MyFont.eot?#iefix')`<br/>Be aware downstream loaders may remove query-string or hash.                                   |\n| `removeCR`  | boolean                    | `false`     |          | Convert orphan CR to whitespace (postcss only).<br/>See known issues below.                                                                                                          |\n| `debug`     | boolean                    | `false`     |          | Display debug information.                                                                                                                                                       |\n| `silent`    | boolean                    | `false`     |          | Do **not** display warnings.                                                                                                                                                     |\n| `root`      | string                     | _unset_     |          | Similar to the (now defunct) option in `css-loader`.<br/>This string, possibly empty, is prepended to absolute URIs.<br/>Absolute URIs are only processed if this option is set. |\n| `join`      | function                   | _inbuilt_   | advanced | Custom join function.<br/>Use custom javascript to fix asset paths on a per-case basis.<br/>Refer to the default implementation for more information.                            |\n| `absolute`  | boolean                    | `false`     | useless  | Forces URIs to be output as absolute file paths.<br/>This is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.      |\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) or [postcss](https://postcss.org/) process is run on incoming CSS.\n\nEach `url()` statement may imply an asset or may not. Generally only relative URIs are considered. However if `root` is specified then absolute or root-relative URIs are considered.\n\nFor each URI considered, the incomming source-map is consulted to determine the original file where the `url()` was specified. This becomes the `base` argument to the `join` function, whose default implementation is something like the following pseudocode.\n\n```javascript\njoin(uri, base?) =>\n  compose(path.normalize, path.join)(base || options.join, uri);\n```\n\nNote that for absolute `uri` then the `base` is absent. In the default implementation the `root` option is used instead.\n\nFull file search has been discontinued in version 3, however it is possible to specify a custom `join` function.\n\nThere is the added complexity that `base` may be an iterator. However `resolve-url-loader` exports some useful functions that makes a custom `join` easier.\n\nFollowing `join` the URI has become an absolute path. Back-slashes are then converted to forward-slashes and the path is made relative to the initial resource being considered.\n\nUse the `debug` option to see verbose information from the `join` function.\n\n## Limitations / Known-issues\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nEnsure this is indeed the problem as there are many ways to misconfigure webpack. Try inlining the mixin and check that everything works correctly. However ultimately you will need to work around this.\n\n### Compatiblity\n\nTested `macOS` and `Windows` for `node 6.x`.\n\nAll `webpack1`-`webpack4` with contemporaneous loaders/plugins.\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n### Engines\n\nThe `engine:postcss` is by far the more reliable option.\n\nThe `engine:rework` option is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.\n\nIf you need production css source-map it is best to avoid the combination `webpack4` with `engine:rework`. Tests show a systematic flaw in the outgoing source-map mappings.\n\n### Absolute URIs\n\nBy \"absolute URIs\" we more correctly mean assets with root-relative URLs or absolute file paths.\n\n> Absolute paths are **not** processed by default\n\nThese are **not** processed unless a `root` is specified.\n\nHowever recall that any paths that _are_ processed will have windows back-slash converted to posix forward-slash. This can be useful since some webpack loaders can choke on windows paths. By using `root: ''` then `resolve-url-loader` effectively does nothing to absolute paths except change the back-slash.\n\nIt can also be useful to process absolute URIs if you have a custom `join` function and want to process all paths. However this is perhaps better done with some separate `postcss` plugin.\n\n## Orphan carriage-return characters\n\nUnder some conditions libsass outputs naked `CR` characters which it does **not** consider newlines. However `postcss` does consider these newlines. The result in a source-map offset which can crash `resolve-url-loader`.\n\nThis is not fully understood but is associated with multiline declarations.\n\n**Solutions**\n* Try the node-sass [linefeed](https://github.com/sass/node-sass#linefeed--v300) option by way of `sass-loader`.\n\n**Work arounds** \n* Enable `removeCR` option [here](#option).\n* Remove linebreaks in declarations.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\n> Remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* Remove this loader and make sure it is not a problem with a different loader in your config (most often the case).\n* Check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer.\n* Review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar.\n* Be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us.\n* (ideally) Debug some code and let me know where the problem sits.\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**. I know it is old but it maintains backwards compatibility.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","readmeFilename":"README.md","_id":"resolve-url-loader@3.1.0-beta.1","_npmVersion":"5.10.0","_nodeVersion":"6.14.4","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-lirTe+wVVbpPr+F4X987Vrq/7tTLT2IOYlerviZLoPWkBcWk5EyN30KXSeyIsl9LVoEOpUV4KzmFiF1X3EB2Ew==","shasum":"c8ba76f348804278c300df8dff46aad797c468ea","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.1.0-beta.1.tgz","fileCount":11,"unpackedSize":41130,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcdE5NCRA9TVsSAnZWagAA+voP+gMaOQMlIj9MLfwc7vQ4\ntxr0HxDEkCLLQH9QBIJ0Rsf+Q9wBX17BUHBCZsc7Emn52mbI1b0q3nEkycJN\nceBlbPkPFyBK9z74TnFHQPsMj25OYHK242Yp+Oi3gk1f/OyTYF619Ro4eM/B\nkIZ8l5nC7m8rWaZ9461X0vCD8Z77LNGynbIyh6t49kpPxbbfUwYEZPLWe4RC\na+UWHUZBIo0FRycsNFeZvI8VGVAad5Khh0gECvVBOXzTsTzYd7Y0RqsjEnr5\nNCyJkQXBlEuIALG9tXx1Wx82u9NGNvEq7haojSOAQCrBR5DdNJVqKob8LD2v\nq9xb8Gr2Nvu0WshzBWHsYKU2jlaWCwgPLw7uEzYq/K3CK7LWn6V60Z78o7DR\n8em2Jo4fWqVCqfnbqjvk9IgorkxSiVxn9Hu8Zr1HWwsLYVlZMC+9215ugJ/k\nE93t6IYQQx54vTzFlqUr/kYgaVjrllzVPKCJcvbPseMDgYq/DGukBWRP7sqv\nsnI6TT9YZ7IDa+0kYDmOdJoeEAWIlABOUnz1pvK61TalltLvCHGdVsWsMZL3\n4W9F7uGXYChwXdNA/mJspdHXUS6qWGdpANcJXcoMNgDXa7TxH16/G6uuHF+x\nMZY5L95U7DRs2KJhn7FYciwcf2px4L96SVRd8eFqSqK0flrt5X5ltrVPGjYe\nXffh\r\n=EKbo\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.1.0-beta.1_1551126092800_0.09879676996646691"},"_hasShrinkwrap":false},"3.1.0":{"name":"resolve-url-loader","version":"3.1.0","description":"Webpack loader that resolves relative paths in url() statements based on the original source file","main":"index.js","repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"author":{"name":"bholloway"},"license":"MIT","bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"homepage":"https://github.com/bholloway/resolve-url-loader","engines":{"node":">=6.0.0"},"scripts":{"lint":"jshint --exclude **/node_modules index.js lib"},"dependencies":{"adjust-sourcemap-loader":"2.0.0","camelcase":"5.0.0","compose-function":"3.0.3","convert-source-map":"1.6.0","es6-iterator":"2.0.3","loader-utils":"1.2.3","postcss":"7.0.14","rework":"1.0.1","rework-visit":"1.0.0","source-map":"0.6.1"},"_id":"resolve-url-loader@3.1.0","_npmVersion":"5.10.0","_nodeVersion":"6.14.4","_npmUser":{"name":"bholloway","email":"npm@bholloway.com"},"dist":{"integrity":"sha512-2QcrA+2QgVqsMJ1Hn5NnJXIGCX1clQ1F6QJTqOeiaDw9ACo1G2k+8/shq3mtqne03HOFyskAClqfxKyFBriXZg==","shasum":"54d8181d33cd1b66a59544d05cadf8e4aa7d37cc","tarball":"https://registry.npmjs.org/resolve-url-loader/-/resolve-url-loader-3.1.0.tgz","fileCount":11,"unpackedSize":41807,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcpS3JCRA9TVsSAnZWagAASyYQAJeILFG3wG0j5PH6BkCA\nKuSOpXneyGsVemFxn29OsIIgxA5UCCQS1FxJZub806afvlrAFijdTiBnhOIV\njr+OqLEsagdKT/CZjhwZ3Cv2XF4uHg8GBZCCja7Gi9bvHVm8DrKIuLsDjXiP\nVEnEG6MFQyoOxdgidC0FAXCCK1D/steD+vJQhwt5EC79Deb24pDGphBibwRk\nMNyYTzIPcBBDM8/o37gBOYrmAf2wSoomzgK5gHKKlzIaIgdCtYfUVFvJCN/o\nbr2GGfWY7MpW3xjnFWRYidRiEETAMb2HwDPw5rkRYHDptg9pi5wENHK9oJyj\nRD2RYx3Fn39NwS1Pjhb8sS92C3b70/RL5COPbpsDrytJyrR7HGP9Tq7aiZTI\nHSGw5htFCGJ/pGatxGUPaIFjOsij+d7+X42gHENZsARuCj2pI/Dr16WTdKBS\nIjRWidFjxAV93bpeaEgaZKC50Yi8dbLpc3eM1IAdRUBHpyvo5iyVM8wKXfpF\n8K4Xfr0E4QivmFnt98APnL3kimf9WkygiiRlfeaH15/+lbnfJExGvXDLB/NM\neC4GVQZa6V/v2Cs0GPCHSb69bFxXT8EXE8gtNR4H7PhIPZSUw0iDKcNlTF/N\nwWpluBTwNiQ2VA3lw5b2qGWZk1kydeBvdzR2kmbinmjalxuMGdDrvBsDl1gj\nrDs0\r\n=NMiB\r\n-----END PGP SIGNATURE-----\r\n"},"maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"directories":{},"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/resolve-url-loader_3.1.0_1554329032298_0.6974365462149654"},"_hasShrinkwrap":false}},"readme":"# Resolve URL Loader\n\n[![NPM](https://nodei.co/npm/resolve-url-loader.png)](https://www.npmjs.com/package/resolve-url-loader)\n\nA **webpack loader** that rewrites relative paths in url() statements based on the original source file.\n\n## Why?\n\n> **TL;DR** Making Sass work with a feature based project structure\n\nWith webpack you can import a `.scss` file (or some other compile-to-css file) and have a loader take care of the transpilation. With **Sass** (at least) this file can include a whole tree of source files into a single output.\n\nWe can imagine a virtual `.css` file at the location the original `.scss` import. Webpack expects any **assets** found in this CSS to be relative to the original imported file.\n\nFor projects with a **feature based structure** this will be a problem, since you will want to **co-locate** your assets with your `.scss` partials.\n\n**Example** - webpack imports `index.scss` which includes feature `foo`.\n\n| files                              | content                |\n|------------------------------------|------------------------|\n|src /                               |                        |\n|&nbsp;&nbsp;index.scss              | `@import features/foo` |\n|&nbsp;&nbsp;features /              |                        |\n|&nbsp;&nbsp;&nbsp;&nbsp;_foo.scss   | `url(bar.png)`         |\n|&nbsp;&nbsp;&nbsp;&nbsp;bar.png     |                        |\n\nIntuatively we want the assets in partial `_foo.scss` relative to the partial, meaning `url(bar.png)`.\n\nHowever webpack's `css-loader` will encounter `url(bar.png)` and expect to find `src/bar.png`. This is **not** the correct location and the build will fail.\n\nThankfully `resolve-url-loader` provides the \"url rewriting\" that Sass is missing. Use it _after_ the transpiler (such as [sass-loader](https://www.npmjs.com/package/sass-loader)). It makes use of the [source-map](http://www.mattzeunert.com/2016/02/14/how-do-source-maps-work.html) to find the original source file and rewrite `url()` statements.\n\nIn our example it rewrites `url(bar.png)` to `url(features/bar.png)` as required.\n\n## Version 3\n\n**Features**\n\n* Use `postcss` parser by default. This is long overdue as the old `rework` parser doesn't cope with modern css.\n\n* Lots of automated tests running actual webpack builds. If you have an interesting use-case let me know.\n\n**Breaking Changes**\n* Multiple options changed or deprecated.\n* Removed file search \"magic\" in favour of `join` option.\n* Errors always fail and are no longer swallowed.\n* Processing absolute asset paths requires `root` option to be set.\n\n**Migrating**\n\nInitially set option `engine: 'rework'` for parity with your existing build. Once working you can remove this option **or** set `engine: 'postcss'` explicitly.\n\nRetain `keepQuery` option if you are already using it.\n\nThe `root` option now has a different meaning. Previously it limited file search. Now it is the base path for absolute or root-relative URIs, consistent with `css-loader`. If you are already using it you can probably remove it.\n\nIf you build on Windows platform **and** your content contains absolute asset paths, then `css-loader` could fail. The `root` option here may fix the URIs before they get to `css-loader`. Try to leave it unspecified, otherwise (windows only) set to empty string `root: ''`.\n\n## Getting started\n\n### Install\n\nvia npm\n\n```bash\nnpm install resolve-url-loader --save-dev\n```\n\nvia yarn\n\n```bash\nyarn add resolve-url-loader --dev\n```\n\n### Configure Webpack\n\nThe typical use case is `resolve-url-loader` between `sass-loader` and `css-loader`.\n\n**:warning: IMPORTANT**\n* **source-maps required** for loaders preceding `resolve-url-loader` (regardless of `devtool`).\n* Always use **full loader package name** (don't omit `-loader`) otherwise you can get errors that are hard to debug.\n\n\n``` javascript\nrules: [\n  {\n    test: /\\.scss$/,\n    use: [\n      ...\n      {\n        loader: 'css-loader',\n        options: {...}\n      }, {\n        loader: 'resolve-url-loader',\n        options: {...}\n      }, {\n        loader: 'sass-loader',\n        options: {\n          sourceMap: true,\n          sourceMapContents: false\n        }\n      }\n    ]\n  },\n  ...\n]\n```\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\n## Options\n\n| option      | type                       | default     |          |  description                                                                                                                                                                     |\n|-------------|----------------------------|-------------|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `engine`    | `'rework'`<br/>`'postcss'` | `'postcss'` |          | The css parser engine.                                                                                                                                                           |\n| `sourceMap` | boolean                    | `false`     |          | Generate a source-map.                                                                                                                                                           |\n| `keepQuery` | boolean                    | `false`     |          | Keep query-string and/or hash suffixes.<br/>e.g. `url('./MyFont.eot?#iefix')`<br/>Be aware downstream loaders may remove query-string or hash.                                   |\n| `removeCR`  | boolean                    | `false`     |          | Convert orphan CR to whitespace (postcss only).<br/>See known issues below.                                                                                                          |\n| `debug`     | boolean                    | `false`     |          | Display debug information.                                                                                                                                                       |\n| `silent`    | boolean                    | `false`     |          | Do **not** display warnings.                                                                                                                                                     |\n| `root`      | string                     | _unset_     |          | Similar to the (now defunct) option in `css-loader`.<br/>This string, possibly empty, is prepended to absolute URIs.<br/>Absolute URIs are only processed if this option is set. |\n| `join`      | function                   | _inbuilt_   | advanced | Custom join function.<br/>Use custom javascript to fix asset paths on a per-case basis.<br/>Refer to the default implementation for more information.                            |\n| `absolute`  | boolean                    | `false`     | useless  | Forces URIs to be output as absolute file paths.<br/>This is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.      |\n\n## How it works\n\nA [rework](https://github.com/reworkcss/rework) or [postcss](https://postcss.org/) process is run on incoming CSS.\n\nEach `url()` statement may imply an asset or may not. Generally only relative URIs are considered. However if `root` is specified then absolute or root-relative URIs are considered.\n\nFor each URI considered, the incomming source-map is consulted to determine the original file where the `url()` was specified. This becomes the `base` argument to the `join` function, whose default implementation is something like the following pseudocode.\n\n```javascript\njoin(uri, base?) =>\n  compose(path.normalize, path.join)(base || options.join, uri);\n```\n\nNote that for absolute `uri` then the `base` is absent. In the default implementation the `root` option is used instead.\n\nFull file search has been discontinued in version 3, however it is possible to specify a custom `join` function.\n\nThere is the added complexity that `base` may be an iterator. However `resolve-url-loader` exports some useful functions that makes a custom `join` easier.\n\nFollowing `join` the URI has become an absolute path. Back-slashes are then converted to forward-slashes and the path is made relative to the initial resource being considered.\n\nUse the `debug` option to see verbose information from the `join` function.\n\n## Limitations / Known-issues\n\n### Mixins\n\nWhere `url()` statements are created in a mixin the source file may then be the mixin file, and not the file calling the mixin. Obviously this is **not** the desired behaviour.\n\nEnsure this is indeed the problem as there are many ways to misconfigure webpack. Try inlining the mixin and check that everything works correctly. However ultimately you will need to work around this.\n\n### Compatiblity\n\nTested `macOS` and `Windows` for `node 6.x`.\n\nAll `webpack1`-`webpack4` with contemporaneous loaders/plugins.\n\nRefer to `test` directory for full webpack configurations (as used in automated tests).\n\nSome edge cases with `libsass` on `Windows` (see below).\n\n### Engines\n\nThe `engine:postcss` is by far the more reliable option.\n\nThe `engine:rework` option is retained for historical compatibility but is likely to be removed in the future, so let me know if you use it.\n\nIf you need production css source-map it is best to avoid the combination `webpack4` with `engine:rework`. Tests show a systematic flaw in the outgoing source-map mappings.\n\n### Absolute URIs\n\nBy \"absolute URIs\" we more correctly mean assets with root-relative URLs or absolute file paths.\n\n> Absolute paths are **not** processed by default\n\nThese are **not** processed unless a `root` is specified.\n\nHowever recall that any paths that _are_ processed will have windows back-slash converted to posix forward-slash. This can be useful since some webpack loaders can choke on windows paths. By using `root: ''` then `resolve-url-loader` effectively does nothing to absolute paths except change the back-slash.\n\nIt can also be useful to process absolute URIs if you have a custom `join` function and want to process all paths. However this is perhaps better done with some separate `postcss` plugin.\n\n### Windows line breaks\n\nNormal windows linebreaks are `CRLF`. But sometimes libsass will output single `CR` characters.\n\nThis problem is specific to multiline declarations. Refer to the [libsass bug #2693](https://github.com/sass/libsass/issues/2693).\n\nIf you have _any_ such multiline declarations preceding `url()` statements it will fail your build.\n \nLibsass doesn't consider these orphan `CR` to be newlines but `postcss` engine does.  The result being an offset in source-map line-numbers which crashes `resolve-url-loader`.\n\n```\nModule build failed: Error: resolve-url-loader: CSS error\n  source-map information is not available at url() declaration\n```\n\nSome users find the node-sass `linefeed` option solves the problem.\n\n**Solutions**\n* Try the node-sass [linefeed](https://github.com/sass/node-sass#linefeed--v300) option by way of `sass-loader`.\n\n**Work arounds** \n* Enable `removeCR` option [here](#option).\n* Remove linebreaks in declarations.\n\n**Diagnosis**\n1. Run a stand-alone sass build `npx node-sass index.scss output.css`\n2. Use a hex editor to check line endings `Format-Hex output.css` \n3. Expect `0DOA` (or desired) line endings. Single `0D` confirms this problem.\n\n## Getting help\n\nWebpack is difficult to configure but extremely rewarding.\n\n> Remove this loader and make sure it is not a problem with a different loader in your config (most often the case)\n\nI am happy for you to **raise an issue** to ask a question regarding this package. However ensure you follow the check-list first.\n\nCurrently I am **not** [dogfooding](https://en.wikipedia.org/wiki/Eating_your_own_dog_food) this loader in my own work. I may rely on you being able to isolate the problem in a simple example project and to help debug.\n\nI am happy this loader helps so many people. Open-source is provided as-is so please try not project your frustrations. There are some really great people who follow this project who can help.\n\n### Issues\n\nBefore raising a new issue:\n\n* Remove this loader and make sure it is not a problem with a different loader in your config (most often the case).\n* Check [stack overflow](http://stackoverflow.com/search?q=resolve-url-loader) for an answer.\n* Review [previous issues](/issues?utf8=%E2%9C%93&q=is%3Aissue) that may be similar.\n* Be prepared to create a **simple open-source project** that exhibits your problem, should the solution not be immediately obvious to us.\n* (ideally) Debug some code and let me know where the problem sits.\n\n### Pull requests\n\nI am happy to take **pull requests**, however:\n\n* Ensure your change is **backwards compatible** - not all users will be using the same version of Webpack or SASS that you do.\n* Follow the **existing code style**. I know it is old but it maintains backwards compatibility.\n* Uncomon use-cases/fixes should be opt-in per a new **option**.\n* Do **not** overwrite existing variables with new values. I would prefer your change variable names elsewhere if necessary.\n* Add **comments** that describe why the code is necessary - i.e. what edge case are we solving. Otherwise we may rewrite later and break your use-case.\n","maintainers":[{"name":"bholloway","email":"npm@bholloway.com"}],"time":{"modified":"2019-04-03T22:11:29.955Z","created":"2015-08-13T06:34:07.386Z","1.0.0":"2015-08-13T06:34:07.386Z","1.0.1":"2015-08-13T07:21:53.742Z","1.0.2":"2015-08-13T07:46:16.126Z","1.0.3":"2015-08-20T21:27:21.566Z","1.1.0":"2015-08-24T02:00:18.273Z","1.2.0":"2015-09-15T23:53:52.671Z","1.3.0":"2015-10-19T10:24:35.873Z","1.3.1":"2015-10-28T23:46:24.902Z","1.3.2":"2015-10-29T23:02:11.822Z","1.4.0":"2015-11-04T09:34:46.091Z","1.4.1":"2015-11-06T12:23:13.009Z","1.4.2":"2015-11-06T12:48:34.581Z","1.4.3":"2015-12-09T10:29:52.621Z","1.4.4":"2016-06-22T04:23:12.837Z","1.5.0":"2016-07-04T11:54:39.765Z","1.6.0":"2016-07-06T01:15:47.604Z","1.6.1":"2016-12-08T23:51:03.616Z","2.0.0":"2017-02-16T06:52:24.469Z","2.0.1":"2017-03-01T21:06:52.838Z","2.0.2":"2017-03-03T06:23:32.472Z","2.0.3":"2017-06-16T08:56:24.224Z","2.1.0":"2017-06-24T12:10:53.591Z","2.1.1":"2017-10-09T20:42:37.281Z","2.2.0":"2017-10-29T21:41:59.091Z","2.2.1":"2017-12-10T21:23:25.702Z","2.3.0":"2018-03-04T09:44:30.078Z","0.0.1-experiment-postcss":"2018-05-15T09:01:24.747Z","3.0.0-alpha.1":"2018-08-19T01:37:36.515Z","3.0.0-alpha.2":"2018-08-30T00:54:09.262Z","3.0.0-beta.1":"2018-09-07T14:20:25.547Z","2.3.1":"2018-09-08T07:25:48.203Z","3.0.0":"2018-09-14T02:53:55.263Z","3.0.1":"2019-02-16T07:06:41.038Z","2.3.2":"2019-02-16T08:12:06.409Z","3.1.0-beta.1":"2019-02-25T20:21:33.025Z","3.1.0":"2019-04-03T22:03:52.533Z"},"homepage":"https://github.com/bholloway/resolve-url-loader","keywords":["webpack","loader","css","normalize","rewrite","resolve","url","sass","relative","file"],"repository":{"type":"git","url":"git+https://github.com/bholloway/resolve-url-loader.git"},"author":{"name":"bholloway"},"bugs":{"url":"https://github.com/bholloway/resolve-url-loader/issues"},"license":"MIT","readmeFilename":"README.md","users":{"nikoloza":true,"rubiadias":true,"micate":true,"ackhub":true,"fadihania":true,"pavel06081991":true,"klimnikita":true,"tyllo":true,"sunny_anna":true,"xyyjk":true,"ivmmoreira":true,"jmsmrgn":true,"juandaco":true,"mwiacko":true,"lekhnath":true,"suyu.tech":true,"n0f3":true,"piotrlewandowski":true,"dbuggerx":true,"ravendev42":true,"kodekracker":true,"muzi131313":true,"flayks":true},"_etag":"W/\"bdb9c08fdd7c5e4904529c1b884a9422\"","_lastModified":"Wed, 03 Apr 2019 22:11:31 GMT"}